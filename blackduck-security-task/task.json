{
  "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
  "id": "edd0f606-d9e3-4294-9d0d-64f9f1aadfde",
  "name": "BlackDuckSecurityScan",
  "friendlyName": "Black Duck Security Scan",
  "description": "Run security scans on Polaris, Black Duck, Coverity or Software Risk Manager (SRM) platforms",
  "helpMarkDown": "",
  "category": "Utility",
  "author": "Black Duck Software Inc.",
  "version": {
    "Major": 1,
    "Minor": 10,
    "Patch": 0
  },
  "instanceNameFormat": "Black Duck Software Inc.",
  "groups": [
    {
      "name": "scanConfiguration",
      "displayName": "Scan Configuration",
      "isExpanded": true
    },
    {
      "name": "polarisScanOptions",
      "displayName": "Scan Options",
      "isExpanded": false,
      "visibleRule": "scanType = polaris"
    },
    {
      "name": "polarisPREnable",
      "displayName": "Pull Request Comment Options",
      "isExpanded": false,
      "visibleRule": "polarisWaitForScan = true"
    },
    {
      "name": "polarisSarifReport",
      "displayName": "SARIF Report Options",
      "isExpanded": false,
      "visibleRule": "polarisWaitForScan = true"
    },
    {
      "name": "blackduckScanOptions",
      "displayName": "Scan Options",
      "isExpanded": false,
      "visibleRule": "scanType = blackduck"
    },
    {
      "name": "blackduckScaPREnable",
      "displayName": "Pull Request Comment Options",
      "isExpanded": false,
      "visibleRule": "blackduckScaWaitForScan = true"
    },
    {
      "name": "blackduckScaFixPR",
      "displayName": "Fix Pull Request Options",
      "isExpanded": false,
      "visibleRule": "blackduckScaWaitForScan = true"
    },
    {
      "name": "blackduckScaSarifReport",
      "displayName": "SARIF Report Options",
      "isExpanded": false,
      "visibleRule": "blackduckScaWaitForScan = true"
    },
    {
      "name": "blackduckToolOptions",
      "displayName": "Detect (SCA) Tool Options",
      "isExpanded": false,
      "visibleRule": "scanType = blackduck"
    },
    {
      "name": "coverityScanOptions",
      "displayName": "Scan Options",
      "isExpanded": false,
      "visibleRule": "scanType = coverity"
    },
    {
      "name": "coverityPREnable",
      "displayName": "Pull Request Comment Options",
      "isExpanded": false,
      "visibleRule": "coverityWaitForScan = true"
    },
    {
      "name": "coverityToolOptions",
      "displayName": "Coverity (SAST) Tool Options",
      "isExpanded": false,
      "visibleRule": "scanType = coverity"
    },
    {
      "name": "coverityToolOptionsForPolaris",
      "displayName": "Coverity (SAST) Tool Options",
      "isExpanded": false,
      "visibleRule": "scanType = polaris"
    },
    {
      "name": "blackduckToolOptionsForPolaris",
      "displayName": "Detect (SCA) Tool Options",
      "isExpanded": false,
      "visibleRule": "scanType = polaris"
    },
    {
      "name": "srmScanOptions",
      "displayName": "Scan Options",
      "isExpanded": false,
      "visibleRule": "scanType = srm"

    },
    {
      "name": "coverityToolOptionsForSrm",
      "displayName": "Coverity (SAST) Tool Options",
      "isExpanded": false,
      "visibleRule": "scanType = srm"
    },
    {
      "name": "blackduckToolOptionsForSrm",
      "displayName": "Detect (SCA) Tool Options",
      "isExpanded": false,
      "visibleRule": "scanType = srm"
    },
    {
      "name": "bridgecliOptions",
      "displayName": "Bridge CLI Options",
      "isExpanded": false
    }
  ],
  "inputs": [
    {
      "name": "bridgeCliDownloadUrl",
      "type": "string",
      "label": "Bridge CLI Download URL",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "URL for downloading Bridge CLI",
      "groupName": "bridgecliOptions"
    },
    {
      "name": "bridgeCliDownloadVersion",
      "type": "string",
      "label": "Bridge CLI Version",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Bridge CLI version to be downloaded.",
      "groupName": "bridgecliOptions"
    },
    {
      "name": "bridgeCliInstallDirectory",
      "type": "string",
      "label": "Bridge CLI Installation Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Path where Bridge CLI will be configured.",
      "groupName": "bridgecliOptions"
    },
    {
      "name": "networkAirgap",
      "type": "boolean",
      "label": "Network Airgap",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If provided, Synopsys Task will be using local network to download and execute synopsys bridge.",
      "groupName": "bridgecliOptions"
    },
    {
      "name": "scanType",
      "type": "pickList",
      "label": "Product",
      "required": true,
      "helpMarkDown": "Select Required Product",
      "defaultValue": "Select",
      "options": {
        "Select": "Select",
        "polaris": "Polaris",
        "blackduck": "Black Duck SCA",
        "coverity": "Coverity Platform",
        "srm": "Software Risk Manager (SRM)"
      },
      "groupName": "scanConfiguration"
    },
    {
      "name": "polarisServerUrl",
      "type": "string",
      "label": "URL",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "URL for Polaris Server.",
      "visibleRule": "scanType = polaris",
      "groupName": "scanConfiguration"
    },
    {
      "name": "polarisAccessToken",
      "type": "string",
      "label": "Access Token",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Access token for Polaris.",
      "visibleRule": "scanType = polaris",
      "groupName": "scanConfiguration"
    },
    {
      "name": "polarisAssessmentTypes",
      "type": "string",
      "label": "Assessment Types",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Polaris Assessment Types seperated by commas. <a href='https://polaris.synopsys.com/developer/default/polaris-documentation/t_how-to-test' target='_blank'>Click Here</a> for more info.",
      "visibleRule": "scanType = polaris",
      "groupName": "scanConfiguration"
    },
    {
      "name": "polarisTestScaType",
      "type": "string",
      "label": "SCA Test Type",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Polaris test type to trigger signature scan or package manager scan.",
      "visibleRule": "scanType = polaris",
      "groupName": "scanConfiguration"
    },
    {
      "name": "polarisProjectDirectory",
      "type": "string",
      "label": "Project Directory",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The project source directory. Defaults to repository root directory. Set this to specify a custom folder that is other than repository root",
      "visibleRule": "scanType = polaris",
      "groupName": "scanConfiguration"
    },
    {
      "name": "polarisMarkBuildStatus",
      "type": "pickList",
      "label": "Mark Build Status",
      "defaultValue": "Select",
      "required": false,
      "helpMarkDown": "Specify the build status to use if policy violating issues are found. Default value: Failed. Supported values are: Failed, SucceededWithIssues and Succeeded.",
      "options": {
        "Select": "Select",
        "Failed": "Failed",
        "SucceededWithIssues": "SucceededWithIssues",
        "Succeeded": "Succeeded"
      },
      "visibleRule": "scanType = polaris",
      "groupName": "scanConfiguration"
    },
    {
      "name": "poalrisAzureToken",
      "type": "string",
      "label": "Azure Token",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "PAT or System.AccessToken has to be passed with legitimate access when Polaris PR comment and Polaris Create SARIF is enabled.",
      "visibleRule": "scanType = polaris",
      "groupName": "scanConfiguration"
    },
    {
      "name": "polarisIncludeDiagnostics",
      "type": "boolean",
      "label": "Include Diagnostics",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "All diagnostics files will be available to download when 'true' passed.",
      "visibleRule": "scanType = polaris",
      "groupName": "scanConfiguration"
    },
    {
      "name": "polarisWaitForScan",
      "type": "boolean",
      "label": "Wait For Scan Completion",
      "defaultValue": true,
      "required": false,
      "helpMarkDown": "Specifies if the workflow should wait for the analysis to complete. Default value: true. If set to false, post merge workflows like PR comment, Fix PR, SARIF etc will not be applicable.",
      "visibleRule": "scanType = polaris",
      "groupName": "scanConfiguration"
    },
    {
      "name": "polarisApplicationName",
      "type": "string",
      "label": "Polaris Application",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Application name in Polaris. If not provided, Azure repository name will be set as default value.",
      "visibleRule": "scanType = polaris",
      "groupName": "polarisScanOptions"
    },
    {
      "name": "polarisProjectName",
      "type": "string",
      "label": "Polaris Project",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Project name in Polaris. If not provided, Azure repository name will be set as default value.",
      "visibleRule": "scanType = polaris",
      "groupName": "polarisScanOptions"
    },
    {
      "name": "polarisBranchName",
      "type": "string",
      "label": "Polaris Branch",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Branch name in Polaris.",
      "visibleRule": "scanType = polaris",
      "groupName": "polarisScanOptions"
    },
    {
      "name": "polarisAssessmentMode",
      "type": "pickList",
      "label": "Assessment Mode",
      "defaultValue": "Select",
      "required": false,
      "helpMarkDown": "The test mode type of this scan",
      "visibleRule": "scanType = polaris",
      "options": {
        "Select": "Select",
        "CI": "CI",
        "SOURCEUPLOAD": "SOURCE_UPLOAD"
      },
      "groupName": "polarisScanOptions"
    },
    {
      "name": "projectSourceArchive",
      "type": "string",
      "label": "Upload Archive Instead Of Directory",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The zipped source file path. It overrides the project directory setting above",
      "visibleRule": "polarisAssessmentMode = SOURCEUPLOAD",
      "groupName": "polarisScanOptions"
    },
    {
      "name": "projectSourceExcludes",
      "type": "string",
      "label": "Project Source Excludes",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "A list of git ignore pattern strings that indicate the files need to be excluded from the zip file.",
      "visibleRule": "polarisAssessmentMode = SOURCEUPLOAD",
      "groupName": "polarisScanOptions"
    },
    {
      "name": "projectSourcePreserveSymLinks",
      "type": "boolean",
      "label": "Project Source Preserve SymLinks",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "Flag indicating whether to preserve symlinks in the source zip",
      "visibleRule": "polarisAssessmentMode = SOURCEUPLOAD",
      "groupName": "polarisScanOptions"
    },
    {
      "name": "polarisPrCommentEnabled",
      "type": "boolean",
      "label": "Add Comments to Pull Requests",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "Applicable to pull requests only, Requires Azure Token.",
      "visibleRule": "scanType = polaris",
      "groupName": "polarisPREnable"
    },
    {
      "name": "polarisPrCommentSeverities",
      "type": "string",
      "label": "PR Comment Severities",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Applicable to pull requests only",
      "visibleRule": "polarisPrCommentEnabled = true",
      "groupName": "polarisPREnable"
    },
    {
      "name": "polarisBranchParentName",
      "type": "string",
      "label": "Parent Branch Name",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Parent Branch name in Polaris.",
      "visibleRule": "polarisPrCommentEnabled = true",
      "groupName": "polarisPREnable"
    },
    {
      "name": "polarisReportsSarifCreate",
      "type": "boolean",
      "label": "Generate SARIF Report",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "Enable/disable SARIF report generation.",
      "visibleRule": "scanType = polaris",
      "groupName": "polarisSarifReport"
    },
    {
      "name": "polarisReportsSarifGroupSCAIssues",
      "type": "boolean",
      "label": "Group SCA Issues by Component",
      "defaultValue": true,
      "required": false,
      "helpMarkDown": "Uncheck this to disable grouping by component and list SCA issues by vulnerability.",
      "visibleRule": "polarisReportsSarifCreate = true",
      "groupName": "polarisSarifReport"
    },
    {
      "name": "polarisReportsSarifFilePath",
      "type": "string",
      "label": "SARIF Report File Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "File path (including file name) where SARIF report is created.",
      "visibleRule": "polarisReportsSarifCreate = true",
      "groupName": "polarisSarifReport"
    },
    {
      "name": "polarisReportsSarifSeverities",
      "type": "string",
      "label": "SARIF Report Severities",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Comma separated list of issue severities to include in SARIF report. Supported values: CRITICAL,HIGH,MEDIUM,LOW.",
      "visibleRule": "polarisReportsSarifCreate = true",
      "groupName": "polarisSarifReport"
    },
    {
      "name": "polarisReportsSarifIssueTypes",
      "type": "string",
      "label": "SARIF Report Issue Types",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Comma separated list of issues types to include in SARIF report. Supported values: SAST,SCA.",
      "visibleRule": "polarisReportsSarifCreate = true",
      "groupName": "polarisSarifReport"
    },
    {
      "name": "coverityUrl",
      "type": "string",
      "label": "URL",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "URL for Coverity platform.",
      "visibleRule": "scanType = coverity",
      "groupName": "scanConfiguration"
    },
    {
      "name": "coverityUser",
      "type": "string",
      "label": "Username",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Username for Coverity.",
      "visibleRule": "scanType = coverity",
      "groupName": "scanConfiguration"
    },
    {
      "name": "coverityUserPassword",
      "type": "string",
      "label": "Password",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Password for Coverity.",
      "visibleRule": "scanType = coverity",
      "groupName": "scanConfiguration"
    },
    {
      "name": "coverityProjectDirectory",
      "type": "string",
      "label": "Project Directory",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The project source directory. Defaults to repository root directory. Set this to specify a custom folder that is other than repository root",
      "visibleRule": "scanType = coverity",
      "groupName": "scanConfiguration"
    },
    {
      "name": "coverityMarkBuildStatus",
      "type": "pickList",
      "label": "Mark Build Status",
      "defaultValue": "Select",
      "required": false,
      "helpMarkDown": "Specify the build status to use if policy violating issues are found. Default value: Failed. Supported values are: Failed, SucceededWithIssues and Succeeded.",
      "options": {
        "Select": "Select",
        "Failed": "Failed",
        "SucceededWithIssues": "SucceededWithIssues",
        "Succeeded": "Succeeded"
      },
      "visibleRule": "scanType = coverity",
      "groupName": "scanConfiguration"
    },
    {
      "name": "coverityAzureToken",
      "type": "string",
      "label": "Azure Token",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "PAT or System.AccessToken has to be passed with legitimate access when Coverity PR comment is enabled.",
      "visibleRule": "scanType = coverity",
      "groupName": "scanConfiguration"
    },
    {
      "name": "coverityLocal",
      "type": "boolean",
      "label": "Using Coverity Connect?",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Check this box if you are using Coverity Connect. Defaults to Cloud Native Coverity.",
      "visibleRule": "scanType = coverity",
      "groupName": "scanConfiguration"
    },
    {
      "name": "CoverityIncludeDiagnostics",
      "type": "boolean",
      "label": "Include Diagnostics",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "All diagnostics files will be available to download when 'true' passed.",
      "visibleRule": "scanType = coverity",
      "groupName": "scanConfiguration"
    },
    {
      "name": "coverityWaitForScan",
      "type": "boolean",
      "label": "Wait For Scan Completion",
      "defaultValue": true,
      "required": false,
      "helpMarkDown": "Specifies if the workflow should wait for the analysis to complete. Default value: true. If set to false, post merge workflows like PR comment, Fix PR, SARIF etc will not be applicable.",
      "visibleRule": "scanType = coverity",
      "groupName": "scanConfiguration"
    },
    {
      "name": "coverityProjectName",
      "type": "string",
      "label": "Coverity Project",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Project name in Coverity. If not provided, Azure repository name will be set as default value.",
      "visibleRule": "scanType = coverity",
      "groupName": "coverityScanOptions"
    },
    {
      "name": "coverityStreamName",
      "type": "string",
      "label": "Coverity Stream",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Stream name in Coverity. If not provided, for non-PR context Azure repository name concatenated with source branch name (i.e. testRepo-feature1) and for PR context Azure repository name concatenated with target branch name (i.e. testRepo-main) will be set as default value.",
      "visibleRule": "scanType = coverity",
      "groupName": "coverityScanOptions"
    },
    {
      "name": "coverityPolicyView",
      "type": "string",
      "label": "Coverity Policy View",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Name/ID number of a saved view to apply as a 'break the build' policy.",
      "visibleRule": "scanType = coverity",
      "groupName": "coverityScanOptions"
    },
    {
      "name": "coverityVersion",
      "type": "string",
      "label": "Coverity Version",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Version of Coverity Thin Client to use.",
      "visibleRule": "scanType = coverity",
      "groupName": "coverityScanOptions"
    },
    {
      "name": "coverityAutomationPrComment",
      "type": "boolean",
      "label": "Add Comments to Pull Requests",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "Applicable to pull requests only, Requires Azure Token.",
      "visibleRule": "coverityWaitForScan = true",
      "groupName": "coverityPREnable"
    },
    {
      "name": "coverityBuildCommand",
      "type": "string",
      "label": "Build Command",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Build command for Coverity",
      "visibleRule": "scanType = coverity",
      "groupName": "coverityToolOptions"
    },
    {
      "name": "coverityCleanCommand",
      "type": "string",
      "label": "Clean Command",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Clean command for Coverity",
      "visibleRule": "scanType = coverity",
      "groupName": "coverityToolOptions"
    },
    {
      "name": "coverityConfigPath",
      "type": "string",
      "label": "Config File Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Coverity config file path (.yaml/.yml/.json).",
      "visibleRule": "scanType = coverity",
      "groupName": "coverityToolOptions"
    },
    {
      "name": "coverityArgs",
      "type": "string",
      "label": "Additional Arguments",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Additional Coverity Arguments separated by space.",
      "visibleRule": "scanType = coverity",
      "groupName": "coverityToolOptions"
    },
    {
      "name": "coverityInstallDirectory",
      "type": "string",
      "label": "Installation Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Directory path to install Coverity.",
      "visibleRule": "scanType = coverity",
      "groupName": "coverityToolOptions"
    },
    {
      "name": "coverityBuildCommandForPolaris",
      "type": "string",
      "label": "Build Command",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Build command for Coverity.",
      "visibleRule": "scanType = polaris",
      "groupName": "coverityToolOptionsForPolaris"
    },
    {
      "name": "coverityCleanCommandForPolaris",
      "type": "string",
      "label": "Clean Command",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Clean command for Coverity.",
      "visibleRule": "scanType = polaris",
      "groupName": "coverityToolOptionsForPolaris"
    },
    {
      "name": "coverityConfigPathForPolaris",
      "type": "string",
      "label": "Config File Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Coverity config file path (.yaml/.yml/.json).",
      "visibleRule": "scanType = polaris",
      "groupName": "coverityToolOptionsForPolaris"
    },
    {
      "name": "coverityArgsForPolaris",
      "type": "string",
      "label": "Additional Arguments",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Additional Coverity Arguments separated by space.",
      "visibleRule": "scanType = polaris",
      "groupName": "coverityToolOptionsForPolaris"
    },
    {
      "name": "coverityBuildCommandForSrm",
      "type": "string",
      "label": "Build Command",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Build command for Coverity.",
      "visibleRule": "scanType = srm",
      "groupName": "coverityToolOptionsForSrm"
    },
    {
      "name": "coverityCleanCommandForSrm",
      "type": "string",
      "label": "Clean Command",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Clean command for Coverity.",
      "visibleRule": "scanType = srm",
      "groupName": "coverityToolOptionsForSrm"
    },
    {
      "name": "coverityConfigPathForSrm",
      "type": "string",
      "label": "Config File Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Coverity config file path (.yaml/.yml/.json).",
      "visibleRule": "scanType = srm",
      "groupName": "coverityToolOptionsForSrm"
    },
    {
      "name": "coverityArgsForSrm",
      "type": "string",
      "label": "Additional Arguments",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Additional Coverity Arguments separated by space.",
      "visibleRule": "scanType = srm",
      "groupName": "coverityToolOptionsForSrm"
    },
    {
      "name": "coverityExecutionPath",
      "type": "string",
      "label": "Coverity Installation Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Path to Coverity CLI.",
      "visibleRule": "scanType = srm",
      "groupName": "coverityToolOptionsForSrm"
    },
    {
      "name": "blackduckScaUrl",
      "type": "string",
      "label": "URL",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "URL for Black Duck SCA server.",
      "visibleRule": "scanType = blackduck",
      "groupName": "scanConfiguration"
    },
    {
      "name": "blackduckScaToken",
      "type": "string",
      "label": "Access Token",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "API token for Black Duck SCA.",
      "visibleRule": "scanType = blackduck",
      "groupName": "scanConfiguration"
    },
    {
      "name": "blackduckProjectDirectory",
      "type": "string",
      "label": "Project Directory",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The project source directory. Defaults to repository root directory. Set this to specify a custom folder that is other than repository root",
      "visibleRule": "scanType = blackduck",
      "groupName": "scanConfiguration"
    },
    {
      "name": "blackduckScaMarkBuildStatus",
      "type": "pickList",
      "label": "Mark Build Status",
      "defaultValue": "Select",
      "required": false,
      "helpMarkDown": "Specify the build status to use if policy violating issues are found. Default value: Failed. Supported values are: Failed, SucceededWithIssues and Succeeded.",
      "options": {
        "Select": "Select",
        "Failed": "Failed",
        "SucceededWithIssues": "SucceededWithIssues",
        "Succeeded": "Succeeded"
      },
      "visibleRule": "scanType = blackduck",
      "groupName": "scanConfiguration"
    },
    {
      "name": "blackduckAzureToken",
      "type": "string",
      "label": "Azure Token",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "PAT or System.AccessToken has to be passed with legitimate access when BlackduckSCA PR comment, BlackduckSCA FIX PR and BlackduckSCA Create SARIF is enabled.",
      "visibleRule": "scanType = blackduck",
      "groupName": "scanConfiguration"
    },
    {
      "name": "blackduckIncludeDiagnostics",
      "type": "boolean",
      "label": "Include Diagnostics",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "All diagnostics files will be available to download when 'true' passed.",
      "visibleRule": "scanType = blackduck",
      "groupName": "scanConfiguration"
    },
    {
      "name": "blackduckScaWaitForScan",
      "type": "boolean",
      "label": "Wait For Scan Completion",
      "defaultValue": true,
      "required": false,
      "helpMarkDown": "Specifies if the workflow should wait for the analysis to complete. Default value: true. If set to false, post merge workflows like PR comment, Fix PR, SARIF etc will not be applicable.",
      "visibleRule": "scanType = blackduck",
      "groupName": "scanConfiguration"
    },
    {
      "name": "blackduckScaAutomationPrComment",
      "type": "boolean",
      "label": "Add Comments to Pull Requests",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "Applicable to pull requests only, Requires Azure Token.",
      "visibleRule": "blackduckScaWaitForScan = true",
      "groupName": "blackduckScaPREnable"
    },
    {
      "name": "blackduckScaFixPrEnabled",
      "type": "boolean",
      "label": "Create Fix Pull Requests",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "Flag to enable/disable the automatic fix pull request creations for Black Duck SCA.\nDefault value is false",
      "visibleRule": "scanType = blackduck",
      "groupName": "blackduckScaFixPR"
    },
    {
      "name": "blackduckScaFixPrMaxCount",
      "type": "string",
      "label": "Maximum number of Pull Requests to be created",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Maximum number of pull requests to be created that violate policies. PR is created for each vulnerable component",
      "visibleRule": "blackduckScaFixPrEnabled = true",
      "groupName": "blackduckScaFixPR"
    },
    {
      "name": "blackduckScaFixPrUseUpgradeGuidance",
      "type": "string",
      "label": "Configure Short Term or Long Term Guidance",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Blackduck Hub upgrade guidance Values.Default is \"SHORT_TERM, LONG_TERM\"",
      "visibleRule": "blackduckScaFixPrEnabled = true",
      "groupName": "blackduckScaFixPR"
    },
    {
      "name": "blackduckScaFixPrFilterSeverities",
      "type": "string",
      "label": "List of SEVERITIES to be filtered",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Filter the vulnerabilities by given severities, Fix PR(s) will be created only for issues where the issue severity matches one of the values specified using this option Values. Default is \"CRITICAL,  HIGH\".",
      "visibleRule": "blackduckScaFixPrEnabled = true",
      "groupName": "blackduckScaFixPR"
    },
    {
      "name": "blackduckScaReportsSarifCreate",
      "type": "boolean",
      "label": "Generate SARIF Report",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "Enable/disable SARIF report generation",
      "visibleRule": "scanType = blackduck",
      "groupName": "blackduckScaSarifReport"
    },
    {
      "name": "blackduckScaReportsSarifGroupSCAIssues",
      "type": "boolean",
      "label": "Group SCA Issues by Component",
      "defaultValue": true,
      "required": false,
      "helpMarkDown": "Uncheck this to disable grouping by component and list SCA issues by vulnerability.",
      "visibleRule": "blackduckScaReportsSarifCreate = true",
      "groupName": "blackduckScaSarifReport"
    },
    {
      "name": "blackduckScaReportsSarifFilePath",
      "type": "string",
      "label": "SARIF Report File Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "File path (including file name) where SARIF report is created.",
      "visibleRule": "blackduckScaReportsSarifCreate = true",
      "groupName": "blackduckScaSarifReport"
    },
    {
      "name": "blackduckScaReportsSarifSeverities",
      "type": "string",
      "label": "SARIF Report Severities",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Comma separated list of issue severities to include in SARIF report. Supported values: CRITICAL,HIGH,MEDIUM,LOW",
      "visibleRule": "blackduckScaReportsSarifCreate = true",
      "groupName": "blackduckScaSarifReport"
    },
    {
      "name": "detectScanFull",
      "type": "boolean",
      "label": "Full Scan",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Specifies whether full scan is required or not.",
      "visibleRule": "scanType = blackduck",
      "groupName": "blackduckScanOptions"
    },
    {
      "name": "blackduckScaScanFailureSeverities",
      "type": "string",
      "label": "Scan Failure Severities",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Build will be broken, if specified severity threshold is met. <a href='https://community.synopsys.com/s/article/Black-Duck-Configuring-Policy-Management' target='_blank'>Click Here</a> for more info.",
      "visibleRule": "scanType = blackduck",
      "groupName": "blackduckScanOptions"
    },
    {
      "name": "detectSearchDepth",
      "type": "string",
      "label": "Search Depth",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Number indicating the search depth in the source directory",
      "visibleRule": "scanType = blackduck",
      "groupName": "blackduckToolOptions"
    },
    {
      "name": "detectConfigPath",
      "type": "string",
      "label": "Config File Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Detect config file path (.properties/.yml).",
      "visibleRule": "scanType = blackduck",
      "groupName": "blackduckToolOptions"
    },
    {
      "name": "detectArgs",
      "type": "string",
      "label": "Additional Arguments",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Additional Detect Arguments separated by space.",
      "visibleRule": "scanType = blackduck",
      "groupName": "blackduckToolOptions"
    },
    {
      "name": "detectInstallDirectory",
      "type": "string",
      "label": "Detect Installation Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Directory path to install Detect.",
      "visibleRule": "scanType = blackduck",
      "groupName": "blackduckToolOptions"
    },
    {
      "name": "blackduckScaSearchDepthForPolaris",
      "type": "string",
      "label": "Search Depth",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Number indicating the search depth in the source directory.",
      "visibleRule": "scanType = polaris",
      "groupName": "blackduckToolOptionsForPolaris"
    },
    {
      "name": "blackduckScaConfigPathForPolaris",
      "type": "string",
      "label": "Config File Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Black Duck SCA config file path (.properties/.yml).",
      "visibleRule": "scanType = polaris",
      "groupName": "blackduckToolOptionsForPolaris"
    },
    {
      "name": "blackduckScaArgsForPolaris",
      "type": "string",
      "label": "Additional Arguments",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Additional Black Duck SCA Arguments separated by space.",
      "visibleRule": "scanType = polaris",
      "groupName": "blackduckToolOptionsForPolaris"
    },
    {
      "name": "blackduckScaSearchDepthForSrm",
      "type": "string",
      "label": "Search Depth",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Number indicating the search depth in the source directory.",
      "visibleRule": "scanType = srm",
      "groupName": "blackduckToolOptionsForSrm"
    },
    {
      "name": "blackduckScaConfigPathForSrm",
      "type": "string",
      "label": "Config File Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Black Duck SCA config file path (.properties/.yml).",
      "visibleRule": "scanType = srm",
      "groupName": "blackduckToolOptionsForSrm"
    },
    {
      "name": "blackduckScaArgsForSrm",
      "type": "string",
      "label": "Additional Arguments",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Additional Black Duck SCA Arguments separated by space.",
      "visibleRule": "scanType = srm",
      "groupName": "blackduckToolOptionsForSrm"
    },
    {
      "name": "detectExecutionPath",
      "type": "string",
      "label": "Detect Installation Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Path to the Black Duck SCA Detect jar file to use.",
      "visibleRule": "scanType = srm",
      "groupName": "blackduckToolOptionsForSrm"
    },
    {
      "name": "srmUrl",
      "type": "string",
      "label": "URL",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "URL for SRM Server.",
      "visibleRule": "scanType = srm",
      "groupName": "scanConfiguration"
    },
    {
      "name": "srmApikey",
      "type": "string",
      "label": "API Key",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "API Key for SRM server.",
      "visibleRule": "scanType = srm",
      "groupName": "scanConfiguration"
    },
    {
      "name": "srmAssessmentTypes",
      "type": "string",
      "label": "Assessment Types",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "SRM Assessment Types separated by comma. Supported values: SAST, SCA.",
      "visibleRule": "scanType = srm",
      "groupName": "scanConfiguration"
    },
    {
      "name": "srmProjectDirectory",
      "type": "string",
      "label": "Project Directory",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The project source directory. Defaults to repository root directory. Set this to specify a custom folder that is other than repository root",
      "visibleRule": "scanType = srm",
      "groupName": "scanConfiguration"
    },
    {
      "name": "srmMarkBuildStatus",
      "type": "pickList",
      "label": "Mark Build Status",
      "defaultValue": "Select",
      "required": false,
      "helpMarkDown": "Specify the build status to use if policy violating issues are found. Default value: Failed. Supported values are: Failed, SucceededWithIssues and Succeeded.",
      "options": {
        "Select": "Select",
        "Failed": "Failed",
        "SucceededWithIssues": "SucceededWithIssues",
        "Succeeded": "Succeeded"
      },
      "visibleRule": "scanType = srm",
      "groupName": "scanConfiguration"
    },
    {
      "name": "srmIncludeDiagnostics",
      "type": "boolean",
      "label": "Include Diagnostics",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "All diagnostics files will be available to download when 'true' passed.",
      "visibleRule": "scanType = srm",
      "groupName": "scanConfiguration"
    },
    {
      "name": "srmWaitForScan",
      "type": "boolean",
      "label": "Wait For Scan Completion",
      "defaultValue": true,
      "required": false,
      "helpMarkDown": "Specifies if the workflow should wait for the analysis to complete. Default value: true. If set to false, post merge workflows like PR comment, Fix PR, SARIF etc will not be applicable.",
      "visibleRule": "scanType = srm",
      "groupName": "scanConfiguration"
    },
    {
      "name": "srmProjectName",
      "type": "string",
      "label": "SRM Project Name",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Project name in SRM server. If not provided, Azure repository name will be set as default value.",
      "visibleRule": "scanType = srm",
      "groupName": "srmScanOptions"
    },
    {
      "name": "srmProjectId",
      "type": "string",
      "label": "SRM Project ID",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Project ID in SRM server.",
      "visibleRule": "scanType = srm",
      "groupName": "srmScanOptions"
    },
    {
      "name": "srmBranchName",
      "type": "string",
      "label": "SRM Branch",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Branch name in SRM server.",
      "visibleRule": "scanType = srm",
      "groupName": "srmScanOptions"
    },
    {
      "name": "srmBranchParent",
      "type": "string",
      "label": "SRM Parent Branch",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Parent Branch name in SRM server.",
      "visibleRule": "scanType = srm",
      "groupName": "srmScanOptions"
    }
  ],
  "execution": {
    "Node10": {
      "target": "dist/index.js"
    },
    "Node16": {
      "target": "dist/index.js"
    }
  }
}
