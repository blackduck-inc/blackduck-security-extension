name: Check dist/

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  check-dist:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: cd blackduck-security-task && npm ci

      - name: Rebuild the dist/ directory
        run: cd blackduck-security-task && npm run build && npm run package

      - name: Compare the expected and actual dist/ directories
        run: |
          cd blackduck-security-task
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi
        id: diff

      # If index.js was different than expected, upload the expected version as an artifact
      - uses: actions/upload-artifact@v4
        if: ${{ failure() && steps.diff.conclusion == 'failure' }}
        with:
          name: dist
          path: blackduck-security-task/dist/

      - name: Run tests and collect results
        id: results
        run: |
          cd blackduck-security-task
          npx nyc --reporter=html --reporter=json-summary --reporter=text mocha --require ts-node/register test/unit/**/*.spec.ts test/unit/*.spec.ts        
          echo "passed=$(jq '.numPassedTests' test.json)" >> $GITHUB_OUTPUT
          echo "failed=$(jq '.numFailedTests' test.json)" >> $GITHUB_OUTPUT
          echo "total=$(jq '.numTotalTests' test.json)" >> $GITHUB_OUTPUT
          echo "lines=$(jq '.total.lines.pct' coverage/coverage-summary.json)" >> $GITHUB_OUTPUT

      - name: Comment results on PR
        run: |
          PR=$(jq -r .pull_request.number $GITHUB_EVENT_PATH)
          LINES=$(jq '.total.lines.pct' blackduck-security-task/coverage/coverage-summary.json)
          {
            echo "| File | % Stmts | % Branch | % Funcs | % Lines |"
            echo "|------|---------|----------|---------|---------|"
            jq -r '.total as $t | ["All files", ($t.statements.pct | tostring), ($t.branches.pct | tostring), ($t.functions.pct | tostring), ($t.lines.pct | tostring)] | "| " + join(" | ") + " |"' blackduck-security-task/coverage/coverage-summary.json
            jq -r 'to_entries[] | select(.key != "total") | [(.key | gsub("^.*/src/"; "src/")), (.value.statements.pct | tostring), (.value.branches.pct | tostring), (.value.functions.pct | tostring), (.value.lines.pct | tostring)] | "| " + join(" | ") + " |"' blackduck-security-task/coverage/coverage-summary.json
          } > coverage-table.md
          BODY="## ðŸ§ª Test & Coverage Results

          ![ Tests ](https://img.shields.io/badge/tests-${{ steps.results.outputs.passed }}_passed_${{ steps.results.outputs.failed }}_failed-blue)
          ![Coverage](https://img.shields.io/badge/coverage-${LINES}%25-brightgreen)

          <details>
          <summary><strong>Full Coverage Details</strong></summary>

          $(cat coverage-table.md)

          </details>"
          CID=$(gh api repos/${{ github.repository }}/issues/$PR/comments --jq '.[] | select(.body|contains("## ðŸ§ª Test & Coverage Results")) | .id' | head -n1)
          if [ -n "$CID" ]; then
            gh api repos/${{ github.repository }}/issues/comments/$CID -X PATCH -f body="$BODY"
          else
            gh api repos/${{ github.repository }}/issues/$PR/comments -f body="$BODY"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
